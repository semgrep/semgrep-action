name: tests

on:
  pull_request:
  push:
    branches: [develop]

jobs:
  pytest:
    name: run pytest
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]
    env:
      PIPX_HOME: .pipx
      PIPX_BIN_DIR: .pipx_bin
    steps:
      - uses: actions/checkout@v3

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - id: setup-package-managers
        name: Setup package managers
        run: |
          python -m pip install --upgrade poetry==1.1.4 pipx==0.15.6.0
          echo "$(pwd)/.pipx_bin" >> $GITHUB_PATH
          poetry config virtualenvs.in-project true
          echo "::set-output name=installed-semgrep-version::$(sed --quiet --regexp-extended 's/^FROM returntocorp[/]semgrep:(.+)$/\1/p' Dockerfile)"

      - id: reuse-poetry-virtualenv
        name: Reuse poetry's virtualenv
        uses: actions/cache@v3.0.3
        with:
          path: .venv
          key: ${{ runner.os }}-${{ matrix.python-version }}-poetry-${{ hashFiles('**/poetry.lock') }}

      # install semgrep first so that errors are more obvious if agent dependencies conflict
      - name: Install semgrep
        run: pipx install semgrep==${{ steps.setup-package-managers.outputs.installed-semgrep-version }}

      - name: Install dependencies
        run: poetry install --no-root
        if: steps.reuse-poetry-virtualenv.outputs.cache-hit != 'true'

      - name: Install semgrep-agent
        run: poetry install

      - name: Run pytest
        run: |
          # tests should simulate CI environment iff they need one
          unset CI
          unset "${!GITHUB_@}"

          poetry run pytest tests/acceptance/qa.py

  live-runs:
    name: live run of action on this repo
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - id: semgrep-app-config
        name: with semgrep-app connection
        uses: ./tests/local-image-action
        with:
          publishToken: ${{ secrets.SEMGREP_APP_TOKEN }}
      - id: semgrep-live-registry-id
        name: with a semgrep.live Registry ID
        uses: ./tests/local-image-action
        with:
          config: r/python.jwt
      - id: semgrep-live-ruleset-id
        name: with a semgrep.live Ruleset ID
        uses: ./tests/local-image-action
        with:
          config: p/r2c-CI
      - id: semgrep-live-id
        name: with a semgrep.live Rule ID
        uses: ./tests/local-image-action
        with:
          config: s/QKP
